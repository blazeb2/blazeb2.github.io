import{_ as e,h as a,g as l,G as s}from"./chunks/framework.DvBEbZPB.js";const k=JSON.parse('{"title":"项目部署 | vercel部署","description":"使用vercel一键部署balzeb2图床项目","frontmatter":{"lang":"zh-cn","title":"项目部署 | vercel部署","description":"使用vercel一键部署balzeb2图床项目"},"headers":[],"relativePath":"guide/deploy/vercel.md","filePath":"guide/deploy/vercel.md","lastUpdated":1719061597000}'),t={name:"guide/deploy/vercel.md"},i=s(`<h1 id="vercel部署" tabindex="-1">vercel部署 <a class="header-anchor" href="#vercel部署" aria-label="Permalink to &quot;vercel部署&quot;">​</a></h1><p>注：若 <strong>一键部署</strong> 失效，请使用手动部署</p><h2 id="项目文件结构" tabindex="-1">项目文件结构 <a class="header-anchor" href="#项目文件结构" aria-label="Permalink to &quot;项目文件结构&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    └─static  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 静态文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    └─index.py  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 启动文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">requirements.txt   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文件依赖</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">package.json    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 必须存在 项目依赖</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vercel.json    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// vercel 相关配置</span></span></code></pre></div><h2 id="一键部署" tabindex="-1">一键部署 <a class="header-anchor" href="#一键部署" aria-label="Permalink to &quot;一键部署&quot;">​</a></h2><ul><li>点击一键部署 <a href="https://vercel.com/new/clone?s=https://github.com/ryanuo/blazeB2/tree/master/deploys/vercel-api" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/vercel-%23000000.svg?style=for-the-badge&amp;logo=vercel&amp;logoColor=white" alt="Vercel" data-fancybox="gallery"></a><img src="https://cloud.ryanuo.cc/hexo/4/38c9dcba-97bc-413d-a6a7-c8681937fa59.png" alt="" data-fancybox="gallery"></li></ul><h2 id="手动部署" tabindex="-1">手动部署 <a class="header-anchor" href="#手动部署" aria-label="Permalink to &quot;手动部署&quot;">​</a></h2><ul><li>【<a href="https://github.com/ryanuo/blazeB2" target="_blank" rel="noreferrer">仓库地址</a>】</li></ul><ol><li>第一步：<a href="https://github.com/ryanuo/blazeB2" target="_blank" rel="noreferrer">fork</a> <code>blazeb2</code> 仓库</li><li>第二步：在 <code>https://vercel.com/dashboard</code> 中点击 <code>New Project</code></li><li>第三步：在左侧选择刚刚 <code>fork</code> 的 <code>blazeb2</code> 仓库，点击 <code>Import</code></li><li>第四步：点击 <code>FRAMEWORK PRESET</code> 选择 <code>Other</code></li><li>第五步：点击 <code>ROOT DIRECTORY</code> 右侧的 <code>Edit</code>，选择 <code>deploys/vercel-api</code></li><li>第六步：点击 <code>Deploy</code></li></ol><p><img src="https://cloud.ryanuo.cc/hexo/api/8d4bfe1b-db6a-437c-9186-b8d7948bd451.png" alt="" data-fancybox="gallery"></p><h2 id="自定义域名" tabindex="-1">自定义域名 <a class="header-anchor" href="#自定义域名" aria-label="Permalink to &quot;自定义域名&quot;">​</a></h2><p>按如图所示操作</p><p><img src="https://cloud.ryanuo.cc/hexo/api/e362938e-6415-4389-8e12-86058f4c94a7.png" alt="" data-fancybox="gallery"></p><p>在DNS中添加一条CNAME记录</p><p><img src="https://cloud.ryanuo.cc/hexo/api/465d6266-a5a7-4e03-b01a-88bb0db4c267.png" alt="" data-fancybox="gallery"></p><p>域名即可访问</p><p><img src="https://cloud.ryanuo.cc/hexo/api/7d6035c8-7a9a-4da9-8cc6-9a1c93b5fe8d.png" alt="" data-fancybox="gallery"></p><blockquote><p>参考文章：<a href="https://hin.cool/posts/cfvercel.html" target="_blank" rel="noreferrer">使用Cloudflare加速vercel</a></p></blockquote>`,18),r=[i];function c(o,n,d,p,h,b){return l(),a("div",null,r)}const u=e(t,[["render",c]]);export{k as __pageData,u as default};
